{
	"info": {
		"_postman_id": "603b9537-b251-473b-9ce8-7677295938c9",
		"name": "1sat API Tutorial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34337045",
		"_collection_link": "https://blue-flare-428801.postman.co/workspace/Token-Team-Workspace~5dc6a376-f566-43f6-8fab-cac37c73b85c/collection/34337045-603b9537-b251-473b-9ce8-7677295938c9?action=share&source=collection_link&creator=34337045"
	},
	"item": [
		{
			"name": "0.1 AddFunds if needed",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.whatsonchain.com/v1/bsv/test/faucet/send/{{dstAddress}}",
					"protocol": "https",
					"host": [
						"api",
						"whatsonchain",
						"com"
					],
					"path": [
						"v1",
						"bsv",
						"test",
						"faucet",
						"send",
						"{{dstAddress}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.0 Create Standalone Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/* Personal Info*/\r",
							"//Your TAAL API Key\r",
							"pm.globals.set(\"Apikey\", \"testnet_Your TAAL API Key Here\"); \r",
							"//These, you can get them from your TAAL Wallet Demo app which you can also use to sign transactions.\r",
							"pm.globals.set(\"publicKey\", \"<<publicKey>>\"); \r",
							"pm.globals.set(\"dstAddress\", \"<<dstAddress>>\"); \r",
							"\r",
							"/* Variables */\r",
							"pm.globals.set(\"host\", \"https://platform.taal.com/token-studio/api/v1\");\r",
							"pm.globals.set(\"outputList\", []); //populated by thet get output list steps\r",
							"pm.globals.set(\"utxo_outputIndex\", \"\"); //populated by the GetUTXOs steps\r",
							"pm.globals.set(\"utxo_txId\", \"\"); //populated by the GetUTXOs steps\r",
							"pm.globals.set(\"transactionUid\", \"\"); //populated by the create-transaction steps\r",
							"pm.globals.set(\"txObj\", \"\"); //populated by the create-transaction steps\r",
							"pm.globals.set(\"txId\", \"\"); //populated by the submit-tx steps\r",
							"\r",
							"\r",
							"\r",
							"pm.globals.set(\"Timestamp\", new Date().getTime().toString()); //used to always create a new project\r",
							"pm.globals.set(\"HTMLInscriptionContentType\", \"text/html;charset=utf8\")\r",
							"pm.globals.set(\"TextInscriptionContentType\", \"text/plain;charset=utf-8\")\r",
							"pm.globals.set(\"ImageInscriptionContentType\", \"image/png\")\r",
							"pm.globals.set(\"HTMLInscriptionB64Content\", \"PGh0bWw+PGJvZHk+SGVsbG8gV29ybGQ8L2JvZHk+PC9odG1sPg==\")\r",
							"pm.globals.set(\"TextInscriptionB64Content\", \"VGhpcyBpcyBteSB0ZXh0\")\r",
							"pm.globals.set(\"ImageInscriptionB64Content\", \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAMAAAANIilAAAAAw1BMVEUAAADqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswDqswD////z1HD346Dxy1D89uD56LD013ftviP67MDvxkD++/L9+On23YvyzlruwjH88tT45qv24Jb12oH567v34pvwyUrtvBzruBD//vr89Nvz0mbvxT7rtgn778r67cTfplQTAAAAIXRSTlMAyRNI6cK1rnRMIM8aIfn49PDZzryqpJaBe2VaQQ8KBtBwO4WeAAACNklEQVR42p3X6VLiQBSG4ZOELOwi+yL4dRJBZVHEXWfm/q9q2mBRmHNCOj5/Uv3jrUN1Kh1CMtsZ+u1SA2iWrO7AsclYPXCRYgUVMlHuQOQ5+WkVmawJnVL3cJJfo0yjM+RojUk27cFAf0YC24IR94KY2jkMVW02V27lOjV7aqEAd0bHeiikT0dGKGhMB3V+fxdRFMXAWl+uwbVqh9gDc6OUWgBX+nILgU/fypDj8ESMCe1VfxNb8uCnubbS1f18u9SXx3X8B5yTxB38dKWYVQjGI60CHnNzPryi4wAp/1ZK8IS0QMcumJd79WV9p23mau9O2DIbgoX6EiIRqsQOaTY5EITHMfa/IxL2e5gfb5PVA9IG5OfH78nqA2ldaufG+8XyFXzHStnx7lqLtyoRgylRQ45Tls/gmgSjWM2vwZnGankrxM3s+CnWNoub75rNblAp/1bFb8nykW+YlR9jrRLp0W3qGsSfKrFh59jAIH6W4yE5BvFWJdL32sl9JA8r9fbKHklhxzYf+5NoHn550AvxsXKlY+hFid7TgwPpAIyV5P4FKRXpZbNT3GqBtA5pbL/DSFvp4m8UJYf+w+ITXJkS1m9eN1Xam5jGfLDmy/HuROwRfau1ir7cz+p0MEZBIzrSRyE9OjZzUYA1pR8uLmHsnP8FvDRua8RcuDBi2SSY9WGgNyXZuIUcZyPKVPNxklenUyYWMlXLlMfxIOqwVFQJ2Hg3qJAx2xl0rVITaJTa/jDrc/A/ZNNyCE28mFMAAAAASUVORK5CYII=\")\r",
							"\r",
							"console.log(Date.now().toString())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const projectUid = json_response[\"data\"][\"projectUid\"]\r",
							"console.log(projectUid)\r",
							"pm.globals.set(\"projectUid\", projectUid);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"1satcol project {{Timestamp}}\",\n    \"isFungible\": false,\n    \"type\": \"single\",\n    \"tokenProtocol\": \"OneSatOrdinal\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/project/create",
					"host": [
						"{{host}}"
					],
					"path": [
						"project",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.1 get-details",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/project/{{projectUid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"project",
						"{{projectUid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2 List Projects",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"console.log(json_response[\"data\"][\"projectList\"])\r",
							"//pm.globals.set(\"projectId\", json_response[\"data\"][\"projectList\"][0][\"uid\"]);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/project/",
					"host": [
						"{{host}}"
					],
					"path": [
						"project",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "1.3 create  standalone output",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const outputUid = json_response[\"data\"][\"uid\"]\r",
							"console.log(outputUid)\r",
							"pm.globals.set(\"outputUid\", outputUid);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectUid\": \"{{projectUid}}\",\n    //HTML Inscription as an example but could be any\n    \"contentType\":\"{{HTMLInscriptionContentType}}\",\n    \"b64File\":\"{{HTMLInscriptionB64Content}}\",\n    \n    \"metadata\": {\n        \"name\": \"My single token {{Timestamp}}\",\n         \"subType\": \"single\",\n         \"subTypeData\": \"{\\\"description\\\": \\\"this is description\\\" }\",\n        \"type\": \"ord\",\n        \"description\": \"this is a standalone token description\",\n        \"info\": \"anything\",\n        \"eyes\": \"green\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/create-output",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"create-output"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.4 update-output",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"contentType\": \"text/plain\",\r\n  \"b64File\": \"....\",\r\n  \"metadata\": {\r\n    //Mandatory\r\n    \"name\": \"My updated single token\",\r\n    //Optional  anything except app, type, subType and subTypeData\r\n    \"hair\": \"blue\",\r\n    \"eyes\": \"brown\"\r\n    // not allowed, app, type, subType and subTypeData\r\n  }\r\n}\r\n//you can omit b64File and/or contentType. in this case only metadata will be updated",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/update-output/{{outputUid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"update-output",
						"{{outputUid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.5 delete-output",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"contentType\": \"text/plain\",\r\n  \"b64File\": \"....\",\r\n  \"metadata\": {\r\n    //Mandatory\r\n    \"name\": \"My single token 11111111\",\r\n    //Optional  anything except app, type, subType and subTypeData\r\n    \"hair\": \"blue\",\r\n    \"eyes\": \"brown\"\r\n    // not allowed, app, type, subType and subTypeData\r\n  }\r\n}\r\n//you can omit b64File and/or contentType. in this case only metadata will be updated",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/output/{{outputUid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"output",
						"{{outputUid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.6 create  standalone output Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const outputUid = json_response[\"data\"][\"uid\"]\r",
							"console.log(outputUid)\r",
							"pm.globals.set(\"outputUid\", outputUid);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectUid\": \"{{projectUid}}\",\n    //HTML Inscription as an example but could be any\n    \"contentType\":\"{{HTMLInscriptionContentType}}\",\n    \"b64File\":\"{{HTMLInscriptionB64Content}}\",\n    \n    \"metadata\": {\n        \"name\": \"My single token {{Timestamp}}\",\n         \"subType\": \"single\",\n         \"subTypeData\": \"{\\\"description\\\": \\\"this is description\\\" }\",\n        \"type\": \"ord\",\n        \"description\": \"this is a standalone token description\",\n        \"info\": \"anything\",\n        \"eyes\": \"green\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/create-output",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"create-output"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.7 output-list (all)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const responseList = json_response[\"data\"][\"outputList\"]\r",
							"var outputList = []\r",
							"for (i=0; i<responseList.length;i++){\r",
							"    //Get only those outputs that have not been included in a transaction yet\r",
							"    if (responseList[i][\"transactionUid\"]==null){\r",
							"        outputList.push(responseList[i][\"uid\"]);\r",
							"    }\r",
							"}\r",
							"console.log(outputList)\r",
							"pm.globals.set(\"outputList\", outputList);\r",
							"//Notice that outputs with \"transactionUid\" not null have already been added to a transaction and cannot be reused for a different one."
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"url": {
					"raw": "{{host}}/output/by-project/{{projectUid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"output",
						"by-project",
						"{{projectUid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.8 GetUTXOs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"pm.globals.set(\"utxo_txId\", json_response[\"result\"][0][\"tx_hash\"]);\r",
							"pm.globals.set(\"utxo_outputIndex\", json_response[\"result\"][0][\"tx_pos\"]);\r",
							"//For our tests the first one is enough\r",
							"console.log(json_response[\"result\"][0])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.whatsonchain.com/v1/bsv/test/address/{{dstAddress}}/confirmed/unspent",
					"protocol": "https",
					"host": [
						"api",
						"whatsonchain",
						"com"
					],
					"path": [
						"v1",
						"bsv",
						"test",
						"address",
						"{{dstAddress}}",
						"confirmed",
						"unspent"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.9 create-transaction single token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const transactionUid = json_response[\"data\"][\"transactionUid\"]\r",
							"const txObj = json_response[\"data\"][\"txObj\"]\r",
							"console.log(transactionUid)\r",
							"console.log(JSON.stringify(txObj))\r",
							"pm.globals.set(\"transactionUid\", transactionUid);\r",
							"pm.globals.set(\"txObj\", JSON.stringify(txObj))\r",
							"\r",
							"//pm.globals.set(\"txObjSigned\", txObj)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectUid\": \"{{projectUid}}\",\n    \"publicKey\": \"{{publicKey}}\",\n    \"dstAddress\": \"{{dstAddress}}\",\n    \"outputList\": [\"{{outputList}}\"],\n    \"utxoList\": [\n        {\n           \"outputIndex\": {{utxo_outputIndex}},\n            \"txId\": \"{{utxo_txId}}\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/create-transaction",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"create-transaction"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.10 submit tx single token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"pm.globals.set(\"txId\", json_response[\"data\"][\"txId\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionUid\": \"{{transactionUid}}\",\n    //Manual step, take txObj from the previous step, sign the transaction and paste the result here\n    \"tx\": \"01000000011c0c712b9b52f7ea3d52a261395f5bad6c463adac1d42e3e5e7d430cee22e971000000006b483045022100b5ded01cffc0573192e13459effe785dcb23c5eb7fad13467c5133a8c0907ffa022004d920e7faf219db3b53aa0cac3b3da976e781913814a619de0b977eb8222761412103dfaf45e8ba9b57ea2c108d81a5891d469c5177b80bdcf79721bda3f85a0fca3effffffff020100000000000000fde11e76a914d91d2b08ea3bdc30326d5b53338a1f31270cdf9d88ac0063036f72645109696d6167652f706e67004dc81d6956424f5277304b47676f414141414e53556845556741414145414141414241434149414141416c432b614a414141414247644254554541414c4750432f786842514141436b6c7051304e5163314a485169424a52554d324d546b324e6930794c6a45414145694a6e564e33574a5033466a376639325550566b4c59384c47586249454149694f73434d6751576149516b67426868424153514d574669417057464255526e45685678494c56436b6964694f4b674b4c686e51597149576f745658446a754839796e74583136372b33742b396637764f6563352f7a4f65633850674245534a70486d6f6d6f414f564b465044725948343950534d544a7659414346556a6742434151357376435a7758464141447741336c34666e5377502f774272323841416742773153346b457366682f344f3655435a5841434352414f41694575634c415a4253414d6775564d6755414d6759414c42547332514b414a51414147783566454969414b6f4e414f7a3053543446414e69706b397758414e6969484b6b4941493042414a6b6f52795143514c73415946574255697743774d49416f4b784149693445774b344267466d324d6b6343674c30464148614f574a415051474141674a6c434c4d77414944674341454d6545383044494577446f444453762b43705833434675456742414d444c6c6332585339497a464c6956304270333876446734694869776d7978516d45584b52426d436551696e4a656249784e4935774e4d7a677741414272353063482b4f442b51352b626b34655a6d35327a76394d57692f6d76776279492b496648662f72794d41675141454537503739706635655857413344484162423176327570577744615667426f332f6c644d39734a6f466f4b3048723569336b342f4541656e7146517944776448416f4c432b306c597147394d4f4f4c5076387a34572f67693337322f4541652f747436384142786d6b435a7263436a672f317859573532726c4b4f35387345516a4675392b636a2f736546662f324f4b6448694e4c46634c42574b3856694a754641695463643575564b525243484a6c6549533658387938522b572f516d546477304172495a50774536324237584c624d422b3767454369773559306e59415148377a4c59776143354541454763304d6e6e3341414354762f6d5051437342414d3258704f4d41414c7a6f4746796f6c42644d7867674141455367675371775151634d7752537377413663775232387742634359515a455141776b774477515167626b6742774b6f52695751526c5577447259424c577741787167455a7268454c54424d54674e352b41535849487263426347594269657768693868676b4551636749453245684f6f6752596f37594973344946356d4f42434a6853445353674b51673659675555534c4679484b6b41716c4361704664534350794c5849554f59316351507151323867674d6f7238697278484d5a5342736c454431414a31514c6d6f4878714b7871427a30585130443132416c714a7230527130486a324174714b6e3055766f645851416659714f593444524d51356d6a4e6c68584979485257434a57426f6d78785a6a35566731566f3831597831594e33595647384365596538494a414b4c6742507343463645454d4a73677043515231684d57454f6f4a65776a74424b364346634a67345178776963696b3668507443563645766e4565474936735a42595271776d37694565495a346c5869634f45312b545343514f795a4c6b54676f684a5a41795351744a61306a625343326b5536512b306842706e45776d363542747964376b434c4b41724343586b626551443542506b76764a772b533346447246694f4a4d4361496b55715355456b6f315a542f6c424b57664d6b4b5a6f4b70527a616d653141697169447166576b6c746f485a514c314f4871524d30645a6f6c7a5a73575138756b4c615056304a70705a326e3361432f70644c6f4a33594d65525a66516c394a7236416670352b6d443948634d4459594e673864495969675a61786c374761635974786b766d55796d42644f586d6368554d4e637947356c6e6d412b59623156594b7659716642575279684b564f7056576c5836563536705556584e565039563571677455713155507131355766615a4756624e5134366b4a3142617231616b64566275704e71374f556e64536a31445055562b6a766c2f396776706a44624b4768556167686b696a56474f3378686d4e495262474d6d587857454c57636c5944367978726d45316957374c3537457832426673626469393754464e446336706d724761525a70336d636330424473617834504135325a784b7a69484f446335374c514d7450793278316d71745a71312b725466616574712b326d4c746375305737657661373356776e5543644c4a33314f6d30363933554a756a613655627146757474317a2b6f2b3032507265656b4a3963723144756e64305566316266536a3952667137396276305238334d4451494e70415a62444534592f444d6b47506f61356870754e4877684f476f4563746f75704845614b505253614d6e754362756832666a4e586758506d617362787869724454655a6478725047466961544c62704d536b7865532b4b6332556135706d757447303033544d7a4d6773334b7a59724d6e736a6a6e566e4775655962375a764e76386a59576c525a7a46536f73326938655732705a3879775757545a6233724a6857506c5a35567656573136784a316c7a724c4f7474316c6473554274586d7779624f70764c747169746d36334564707474337854694649387030696e31553237614d657a38374172736d75774737546e325966596c396d33327a78334d48424964316a74304f3378796448584d646d7877764f756b3454544471635370772b6c585a78746e6f584f64387a5558706b755179784b58647063585532326e697164756e33724c6c65556137727253746450316f3575376d3979743257335533637739785832722b3030756d78764a58634d393730483038506459346e484d3435326e6d3666433835446e4c313532586c6c652b37306554374f634a7037574d47334932385262344c334c65324136506a316c2b733770417a374750674b6665702b487671612b4974383976694e2b316e365a666766386e7673372b7376396a2f692f34586e794676464f425741427751486c41623242476f477a413273444877535a424b55484e51574e426273474c77772b4655494d4351315a48334b546238415838687635597a50635a7979613052584b434a3056576876364d4d776d54423757455936477a776a664548357670766c4d3663793243496a675232794975423970475a6b582b5830554b536f7971693771556252546448463039797a57724f525a2b3265396a764750715979354f397471746e4a325a36787162464a73592b796275494334717269426549663452664758456e51544a416e7469655445324d513969654e7a417564736d6a4f63354a70556c6e526a727558636f726b5835756e4f7935353350466b31575a42384f49575945706579502b574449454a514c7868503561647554523054386f53626855394676714b4e6f6c47787437684b504a4c6d6e566156396a6a644f3331442b6d694754305a31786a4d4a54314972655a455a6b726b6a38303157524e6265724d2f5a63646b744f5a53636c4a796a556731706c725172317a43334b4c64505a6973726b77336b65655a74796875546838723335435035632f506246577946544e476a74464b755541345754432b6f4b3368624746743475456939534672554d39396d2f75723549777543466e79396b4c4251754c437a324c683457664867497239467578596a69314d586479347858564b365a486870384e4a3979326a4c73706239554f4a59556c5879616e6e63386f355367394b6c70554d72676c63306c616d55796374757276526175574d56595a566b566539716c395662566e38714635566672484373714b37347345613435754a58546c2f566650563562647261336b713379753372534f756b3632367339316d2f72307139616b485630496277446130623859336c47313974537435306f5870713959374e744d334b7a514d315954587457387932724e76796f54616a396e71646631334c567632747137652b3253626131722f646433767a446f4d644654766537355473764c5572654664727655563939573753376f4c646a7870694737712f356e376475456433543857656a33756c6577663252652f72616e5276624e797676372b79435731534e6f306553447077355a754162397162375a7033745842614b673743516558424a392b6d6648766a554f69687a735063773833666d582b3339516a7253486b72306a712f646177746f32326750614739372b694d6f353064586831487672662f6675387834324e31787a5750563536676e53673938666e6b6770506a7032536e6e70314f507a33556d64783539307a386d577464555632395a3050506e6a3858644f354d74312f337966506535343964384c787739434c335974736c7430757450613439523335772f6546497231747636325833792b3158504b3530394533724f39487630332f366173445663396634317935646e336d3937386273473764754a74306375435736396668323975305864777275544e7864656f3934722f792b32763371422f6f50366e2b302f72466c774733672b474441594d2f4457512f7644676d486e7636552f394f4834644a487a4566564930596a6a592b644878386244527139386d544f6b2b476e737163547a38702b5676393536334f7235392f393476744c7a316a383250414c2b5976507636353571664e7937367570727a724849386366764d35355066476d2f4b334f32333376754f2b363338653948356b6f2f45442b555050522b6d504870394250397a376e665037384c2f6545382f7374527a6a504141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a7936555477414141414a6345685a6377414143784d4141417354415143616e4267414141743153555242564769427456705a53465650474a397a5568473558596e71306d30524c666c663279474c6f6f77576f6f57576879774b6f7378734958756f68346f497449334b466e7549694971537045334c6a41696a52544a62487854624c4a4c4d4372316c70645a4e792b7265632b622f4d50723533572f6d484b58733979427a35387a3574766d326d6150474f57654d636334353535716d6954466a544e4d3050434d47416d4b4257454d47416a36667236616d7875667a425149427a6e6c59574a6a5436657a627432396b5a435265426e53735749675a4c42565a79546e58444d5051645a315a6735433267742f7676337a35387256723130704b5374362b66667674327a657949444979736e2f2f2f714e486a35342b66667273326250746d646f6a534354544e4c6b74444d4e517a734f4c50333738324c70316137392b2f546f755155784d7a4d36644f332f2f2f6b314932584352353456677246305339736a4c792b765470382b66475449364f7271676f4544517757624377754235777a44676b5745594c51715970676e616d4d47415256627162646d793563394578386a49794143354362446f6f496b596936656d6156495867676674326a34744c6533767052665975336576544e2f4b64636b61526b535878306f55464252306c765143786358463759704c494861707a595849727546394a4e73614341524951767837754e31756d532b324a704745742f7153726d6d61706d6d5131457a545a43674e69326f67486f6d666a4c47544a302f36664c374f566544446877393565586c34426b73435977475931335739517936455934687a506e4869784d3656586d445772466b32726f4b4667622b6d61544c6c4f7a5a6f626d35324f427a2f51674758793957527743585138512f474747674d59324167786a55314e55314e54663943676672362b747261576862634e63425449695449466f4c3743746271364f495a78494259492b4b6b7362487858306a5047444d4d5135674774316a414862637a65496275674e42453133576c4755434e663454513046415776504f457534775154656f6f69635a453471356475336165774546774f427739652f5a6b4b4e334a33416b34357948433976414f4f4a6d79746459307a655679525552452f506a7841784f4b69496859754844686b434644664437666e547433696f714b6c507869596d4a6d7a707a70385869717136734c4377764c797372773036696f4b4a4565544e4d6b72545832633645534f486c62634f425769614e4b4c7463346a386544475138594d4f44647533665946544d7a4d3258707030795a4175326e51464a53456c36516e4a77734a356c32657749475a526a2f78514f357531713262426c6d4442306c78754442672f456154644e716132766c5a54676a5837703069614e6554646c666d7130744a677a5537625339336e6676336757756f61476839665831584e716f6c4a5155724944483477484b75437a477838654c42513648772b2f335979374b42707559306a414d48537a4567354d75444c695565684d5345695a506e67774b694e536874554c4d47346142465841366e6343496f64414d42414a697347376475704351454c4a70754172424a4f5a43597743554268634337556d4e3948713951505446697865797159594e4734595a4f78774f34494c74467845527752674c437776372f7630374e6a78703276414f5944466157676d7255347639615359314e56554974334c6c53764c6f31713162544d4b6851346649737231373934704842773865564c4c41596c694245666543642f4159466d423976463476654d4c363965764c7938742f2f767a7039587150487a3875374d6f59383367384f4a72333764745856565831382b66503136396637393639573079476834634c3738654253365345384f5842556437577a4f45517844474f79526d74674a6e59324668735935664c4a65494238506e7a5a376e7864726c632b4f654945534e4153746c2f73414a67515a776e5730796f367a6f4568786a727569344d6a497569414d774d48446751692f4c703079652f3377382f6a78382f33714e4844366654656672306162494d2f3453714173635345716c6b42735a696356765049384462367a3077657658715a66566f336270316b456b584c56713065664e6d71355834557150467256555147636c457078776d6a43764841436c68636b45424c337230364e483438654f562f484a79637241545837353857626c733473534a46525556484f55394f662f497250456152613746454d6c5962426159423764476a4c4537642b3463506e77344e7a6358763969745737666b354f54506e7a384841674733323532646e5631665877395064563166754844686d6a5672786f3464793171624834373648484b6c53666a436472585541546c6979414344584e48672b65336274305042736b4a6b5a4f534241776349515478574d6756483443695838443837556972783965765871716f717a6e6c6c5a61573941714c74713671716773594253327854733677794c4d4d356c51653748512f4f575469486b6a706458467a4d47467539656a586e664e36386556625369333554704a327658372f4b394a57735a617654474f4371597873344756656c42654b6a76333739636a6763675543676f6147685737647546793965724b696f714b6d704561314f5345684937393639342b4c6935733262563170614f6d725571506a342b4e4c5355737849535a6133746d45344e6b525974693151526a652b757342316a537a474f7a3533376c7a47324a6778593277387a652f33697971576d5a6e4a55576b33673174554d7a67784b7266494a4a5834377748564b6a342b506a633374364b696f7247784d5241492f50373975363675727279382f4f6a526f33414658313565336c6c38327734304a6a7254454856786e4d6a37414162627548456a647250753362753733573633323033756b624b797373523673674e576c695967596a447951416d73735a556d34756d5a4d3264735570444c35587277344947534471614765636d696b786d4750632b3072674458726c334466622b416f546f3058626c79785571427973704b6d62374d6933502b36745572776f6a77676f3169636e346c526d3175626f61445830704b536c4e544578416c4f734d344b79754c564c5459324e6a6274322f4c67754b384c476279382f506a347549595933506d7a424866434f33526668415846685a6955614b696f70343865514a4357373331356375585536644f376479354d794d6a497a382f3377672b6c42436841577657724648756d42494766434d7a70634b4249582f4c4341304e42566647744f79423663737477376476337849534567696a35382b6663375333524d4b57474a414e5131425856786365486934374e4e4642467264646c5143765872324b69596d52492f375872312f747671762b506b43672f41367036337032646e5a4451305048425a5868392f747a636e4b553333746959324d375169486f504d4344547756696e76676c67645070584c4a6b795930624e7a425247316342504833364e4330744c546f36326f6234716c57724d45485367496c45314b6141737075346576577144514f4d754c69346a49774d7239644c31434468455167457a7030374e33506d7a413653466162425259446f30316249654843344348354468773746354d4c4477354f536b68495345734c437770543877734c436b704f54487a35384b4a76383965765832375a746b3331646f487633376773574c4a672f667a365a6e7a5270457146444c474c356c5649414c6a3859597a4e6d7a42444850383635312b764e79636c4a536b71794f685a506d54496c507a39664c483734384f485370557537644f6b694c34754f6a6c363965765831363966685971753475486a6174476d77594d4f4744534133627164686b326b4d63436d615330704b636e4e7a487a392b4c42755663393763334a79666e7a396e7a687a6c5266366b535a4d534578506c6556335845784d5443776f4b72504c76765876336475336164657a594d534b53764634527842314a366a4c6576486d546e7035754835534d7361696f71505430394c6476333172525551613954592f5466695847573261545651435a6d5a6e4b3364413062662f2b2f5753786c624536586b5a434f44727743303463486441347570706d7752393854505164525179616d70704f6e44687838654a464b2f4e66756e544a3658536d704b51414866457844756959706b6b2b7a3546484c506a345a6e6269676562416751506b7a704178466830644466656b674e6a59324f7a73374d376932334b676b55386e4842307035524b42742f37436851754442673069556a6f636a6f794d444d4d77717175726c79785a49752f477548486a696f714b6749684d484b64486375434553513570464352574f7157736d38434c4679396d7a3534744337646978596f50487a37676c6666763335387759594b386376486978645856315449766563794443334362417154436b664f52556d374f65574e6a343434644f325342686738665476702b2f5071524930666b74696369496d4c373975334e7a63307946343579493564796b64424566577369342b50486a79556c4a533966766977724b33762f2f76335470302b2f66506c43316d7a63754848506e6a333264477072613965755858762b2f486b79487855564e57624d6d502f2b2b322f416741456a523434634d6d5149504f4c322f3356496167523448746a67374e6d7a5536644f56586255674435392b7479386552506f59496347612b4774794d724b736d704742447765543370364f726e38496e346c36416364366d4557677548516f555032466d574d7a5a6778772b667a4158586c74515868776a6d76724b7955547a414576587231456863775a7641704632756c61435577334736335059394e6d7a597066526367337a4c67702f43687a516f4a43516c4b6d6b433237565a436d58396d7a5a706c5133334368416b32796e4e565370473532502f3332764c6c792b304e525039724566735035397a6e3836576d706734644f6c54355430377036656e3231496b43796b356b30365a4e5374466a596d4c5330744b775979737470616a457974545a304e4251576c704b736b465a57566e48466244716f2b7271366f6a6f32375a744b796b706b543365556745723557546376587358576f5045784d5232313363515234346341656e68346c4841717244437543304c34566c536b6e486c652f667558577071616c7061477161466e5676706b374a4d6b463746354f4844683165745776587332544e43524934634d744e57794d7a5764712f6a344b3066454f515043797a346b355a706d6f77785864664e316e34546e737176323868444670756d2b54397354716967716d754c6e6741414141424a52553545726b4a6767673d3d686a223150755161374b36324d694b43747373534c4b79316b683536575755374d745552350353455403617070115441414c20546f6b656e2053747564696f04696e666f08616e797468696e67046e616d65194d792073696e676c6520746f6b656e203131313131313135330474797065036f726407737562547970650673696e676c650b6465736372697074696f6e26746869732069732061207374616e64616c6f6e6520746f6b656e206465736372697074696f6e0b7375625479706544617461277b226465736372697074696f6e223a202274686973206973206465736372697074696f6e22207d68320f00000000001976a914d91d2b08ea3bdc30326d5b53338a1f31270cdf9d88ac00000000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/submit",
					"host": [
						"{{host}}"
					],
					"path": [
						"submit"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.11 GetTransaction Info",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionUid\": \"{{transactionUid}}\",\n    \"tx\": \"{{txObjSigned}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.whatsonchain.com/v1/bsv/test/tx/hash/{{txId}}",
					"protocol": "https",
					"host": [
						"api",
						"whatsonchain",
						"com"
					],
					"path": [
						"v1",
						"bsv",
						"test",
						"tx",
						"hash",
						"{{txId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.0 Create Collection Project",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"Timestamp\", new Date().getTime().toString()); //used to always create a new project\r",
							"console.log(Date.now().toString())\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const projectUid = json_response[\"data\"][\"projectUid\"]\r",
							"console.log(projectUid)\r",
							"pm.globals.set(\"projectUid\", projectUid);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"1satcol project {{Timestamp}}\",\n    \"isFungible\": true,\n    \"type\": \"collection\",\n    \"tokenProtocol\": \"OneSatOrdinal\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/project/create",
					"host": [
						"{{host}}"
					],
					"path": [
						"project",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.1 create  collection output",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectUid\": \"{{projectUid}}\",\n    //Image Inscription for a collection\n    \"contentType\":\"{{ImageInscriptionContentType}}\",\n    \"b64File\":\"{{ImageInscriptionB64Content}}\",\n    \"metadata\": {\n        \"name\": \"My single token {{Timestamp}}\",\n         \"subType\": \"collection\",\n         \"subTypeData\": \"{\\\"description\\\": \\\"this is description\\\" }\",\n        \"type\": \"ord\",\n        \"description\": \"this is a collection token description\",\n        \"info\": \"anything\",\n        \"eyes\": \"green\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/create-output",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"create-output"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 output-list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const responseList = json_response[\"data\"][\"outputList\"]\r",
							"var outputList = []\r",
							"for (i=0; i<responseList.length;i++){\r",
							"    //Get only those outputs that have not been included in a transaction yet\r",
							"    if (responseList[i][\"transactionUid\"]==null){\r",
							"        outputList.push(responseList[i][\"uid\"]);\r",
							"    }\r",
							"}\r",
							"console.log(outputList)\r",
							"pm.globals.set(\"outputList\", outputList);\r",
							"//Notice that outputs with \"transactionUid\" not null have already been added to a transaction and cannot be reused for a different one."
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"url": {
					"raw": "{{host}}/output/by-project/{{projectUid}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"output",
						"by-project",
						"{{projectUid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.3 GetUTXOs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"pm.globals.set(\"utxo_txId\", json_response[\"result\"][0][\"tx_hash\"]);\r",
							"pm.globals.set(\"utxo_outputIndex\", json_response[\"result\"][0][\"tx_pos\"]);\r",
							"console.log(json_response[\"result\"][0])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.whatsonchain.com/v1/bsv/test/address/{{dstAddress}}/confirmed/unspent",
					"protocol": "https",
					"host": [
						"api",
						"whatsonchain",
						"com"
					],
					"path": [
						"v1",
						"bsv",
						"test",
						"address",
						"{{dstAddress}}",
						"confirmed",
						"unspent"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.4 create-transaction collection token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const transactionUid = json_response[\"data\"][\"transactionUid\"]\r",
							"const txObj = json_response[\"data\"][\"txObj\"]\r",
							"console.log(transactionUid)\r",
							"console.log(JSON.stringify(txObj))\r",
							"pm.globals.set(\"transactionUid\", transactionUid);\r",
							"pm.globals.set(\"txObj\", JSON.stringify(txObj))\r",
							"\r",
							"//pm.globals.set(\"txObjSigned\", txObj)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectUid\": \"{{projectUid}}\",\n    \"publicKey\": \"{{publicKey}}\",\n    \"dstAddress\": \"{{dstAddress}}\",\n    \"outputList\": [\"{{outputList}}\"],\n    \"utxoList\": [\n        {\n           \"outputIndex\": {{utxo_outputIndex}},\n            \"txId\": \"{{utxo_txId}}\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/create-transaction",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"create-transaction"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.5 submit tx collection token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"pm.globals.set(\"txId\", json_response[\"data\"][\"txId\"]);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionUid\": \"{{transactionUid}}\",\n    //Manual step, take txObj from the previous step, sign the transaction and paste the result here\n    \"tx\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/submit",
					"host": [
						"{{host}}"
					],
					"path": [
						"submit"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.6 create  collectionItem output",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectUid\": \"{{projectUid}}\",\n    //Image Inscription for a collectionItem is the normnal one but others can also be used\n    \"contentType\":\"{{TextInscriptionContentType}}\",\n    \"b64File\":\"{{TextInscriptionB64Content}}\",\n    \"metadata\": {\n        \"name\": \"My single token {{Timestamp}}\",\n         \"subType\": \"collectionItem\",\n         \"subTypeData\": \"{\\\"description\\\": \\\"this is description\\\",\\\"collectionId\\\": \\\"{{txId}}_0\\\" }\",\n        \"type\": \"ord\",\n        \"description\": \"this is a collection token description\",\n        \"info\": \"anything\",\n        \"eyes\": \"green\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/create-output",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"create-output"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.7 output-list (collectionItems not on chain)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const responseList = json_response[\"data\"][\"outputList\"]\r",
							"var outputList = []\r",
							"for (i=0; i<responseList.length;i++){\r",
							"    //Get only those outputs that have not been included in a transaction yet\r",
							"    if (responseList[i][\"transactionUid\"]==null){\r",
							"        outputList.push(responseList[i][\"uid\"]);\r",
							"    }\r",
							"}\r",
							"console.log(outputList)\r",
							"pm.globals.set(\"outputList\", outputList);\r",
							"//Notice that outputs with \"transactionUid\" not null have already been added to a transaction and cannot be reused for a different one."
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"url": {
					"raw": "{{host}}/project/{{projectUid}}/output-list",
					"host": [
						"{{host}}"
					],
					"path": [
						"project",
						"{{projectUid}}",
						"output-list"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.8 GetUTXOs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"pm.globals.set(\"utxo_txId\", json_response[\"result\"][0][\"tx_hash\"]);\r",
							"pm.globals.set(\"utxo_outputIndex\", json_response[\"result\"][0][\"tx_pos\"]);\r",
							"console.log(json_response[\"result\"][0])\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.whatsonchain.com/v1/bsv/test/address/{{dstAddress}}/confirmed/unspent",
					"protocol": "https",
					"host": [
						"api",
						"whatsonchain",
						"com"
					],
					"path": [
						"v1",
						"bsv",
						"test",
						"address",
						"{{dstAddress}}",
						"confirmed",
						"unspent"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.9 create-transaction collectionItem token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const transactionUid = json_response[\"data\"][\"transactionUid\"]\r",
							"const txObj = json_response[\"data\"][\"txObj\"]\r",
							"console.log(transactionUid)\r",
							"console.log(JSON.stringify(txObj))\r",
							"pm.globals.set(\"transactionUid\", transactionUid);\r",
							"pm.globals.set(\"txObj\", JSON.stringify(txObj))\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"projectUid\": \"{{projectUid}}\",\n    \"publicKey\": \"{{publicKey}}\",\n    \"dstAddress\": \"{{dstAddress}}\",\n    \"outputList\": [\"{{outputList}}\"],\n    \"utxoList\": [\n        {\n           \"outputIndex\": {{utxo_outputIndex}},\n            \"txId\": \"{{utxo_txId}}\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/token/one-sat-ord/create-transaction",
					"host": [
						"{{host}}"
					],
					"path": [
						"token",
						"one-sat-ord",
						"create-transaction"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.10 submit tx collectionItem token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"pm.globals.set(\"txId\", json_response[\"data\"][\"txId\"]);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"transactionUid\": \"{{transactionUid}}\",\n    //Manual step, take txObj from the previous step, sign the transaction and paste the result here\n    \"tx\": \"SIGNED_TX\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/submit",
					"host": [
						"{{host}}"
					],
					"path": [
						"submit"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.11 output-list ( collectionItems on chain)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"const responseList = json_response[\"data\"][\"outputList\"]\r",
							"var outputList = []\r",
							"for (i=0; i<responseList.length;i++){\r",
							"    //Get only those outputs that have not been included in a transaction yet\r",
							"    if (responseList[i][\"transactionUid\"]==null){\r",
							"        outputList.push(responseList[i][\"uid\"]);\r",
							"    }\r",
							"}\r",
							"console.log(outputList)\r",
							"pm.globals.set(\"outputList\", outputList);\r",
							"//Notice that outputs with \"transactionUid\" not null have already been added to a transaction and cannot be reused for a different one."
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Apikey",
						"value": "{{Apikey}}"
					}
				],
				"url": {
					"raw": "{{host}}/output/by-project/{{projectUid}}?on-chain=0&type=collectionItem",
					"host": [
						"{{host}}"
					],
					"path": [
						"output",
						"by-project",
						"{{projectUid}}"
					],
					"query": [
						{
							"key": "on-chain",
							"value": "0"
						},
						{
							"key": "type",
							"value": "collectionItem"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "env_host",
			"value": "https://console.test.taal.com/token-studio/api/v1",
			"type": "string"
		},
		{
			"key": "Apikey",
			"value": "testnet_bedd5de7d03d4993c715a473c09f5e44"
		}
	]
}